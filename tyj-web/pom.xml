<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <!--继承了parent的 groupId 和 version，只需要定义一个artifactId 就可以唯一标识这个module（jar或者war或其他
    继承了父 pom.xml中的	<dependencyManagement><dependencies> 下的 dependencies，如果需要，直接
    <dependency>
            <groupId>com.dyxx</groupId>
            <artifactId>dyxx-mng-biz</artifactId>
            不再需要<version>了，直接引用继承父中定义的version，若加入了version，则表示加入仅在子pom中用到的jar包
        </dependency>
        同样的，还可以继承<build><pluginManagement> 下的 plugin，子plugin中的version省略

        可继承的POM元素
    groupId: 项目组ID，项目坐标的核心坐标；
    version: 项目版本，项目坐标的核心坐标；
    description: 项目的描述信息；
    organization: 项目的组织信息；
    inceptionYear: 项目的创始年份；
    url: 项目的URL地址；
    developers: 项目的开发者信息；
    contributors: 项目的贡献值和信息；
    distributionManagement: 项目的部署配置；
    issueManagement: 项目的缺陷跟踪系统；
    ciManagement: 项目的持续集成系统信息；
    scm: 项目的版本控制系统信息；
    mailingLists: 项目的邮件列表信息；
    properties: 自定义的Maven属性；
    dependencies: 项目的依赖配置；
    dependencyManagement: 项目的依赖管理配置；
    repositories: 项目的仓库配置；
    build: 包括项目的源码目录配置、输出目录配置、插件配置、插件管理配置等；
    reporting: 包括项目的报告输出目录配置、报告插件配置等。
-->
    <parent>
        <artifactId>tyj</artifactId>
        <groupId>cn.tyj</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>tyj-web</artifactId>
    <packaging>war</packaging>
    <name>tyj-web</name>
    <url>http://maven.apache.org</url>


    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>tyj-service</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <!--logback所需的slf4j-api.jar、logback-core.jar及logback-classsic.jar-->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <!--logback-ext-spring是由官方提供的对Spring的支持，它的作用就相当于log4j中的Log4jConfigListener；这个listener，网上大多都是用的自己实现的，原因在于这个插件似乎并没有出现在官方文档的显要位置导致大多数人并不知道它的存在-->
        <dependency>
            <groupId>org.logback-extensions</groupId>
            <artifactId>logback-ext-spring</artifactId>
        </dependency>
        <!--jcl-over-slf4j是用来把Spring源代码中大量使用到的commons-logging替换成slf4j，只有在添加了这个依赖之后才能看到Spring框架本身打印的日志，否则只能看到开发者自己打印的日志-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <!--数据校验器-->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <!--通用处理api-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <!--文件上传-->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
        </dependency>
        <!--io处理-->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
	    <!--json 支持-->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.binarywang</groupId>
            <artifactId>weixin-java-mp</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>tyj-web</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
